<?xml version="1.0" encoding="UTF-8"?>
<!-- http://blog.csdn.net/haidage/article/details/6794509/配置教程 -->
<configuration>

	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<property name="LOG_HOME" value="c:/log/dongjun-hardware" />

	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<!-- <charset>UTF-8</charset> -->
			<layout class="ch.qos.logback.classic.PatternLayout">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
				<pattern>
					%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
					%msg%n
				</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- 按照每天生成日志文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/dongjun-hardware.log.%d{yyyy-MM-dd}.log
			</FileNamePattern>
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
				<pattern>
					%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
					%msg%n
				</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- ERROR打印 -->
	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/error/%d{yyyy-MM-dd}.log
			</FileNamePattern>
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
				<pattern>
					%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
					%msg%n
				</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- 温度模块 -->
	<appender name="TEMPERATURE_MODULE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/module/temperature/%d{yyyy-MM-dd}.log
			</FileNamePattern>
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
				<pattern>
					%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
					%msg%n
				</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- 电能表模块 -->
	<appender name="ELECTRONIC_MODULE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/module/electronic/%d{yyyy-MM-dd}.log
			</FileNamePattern>
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
				<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
					%msg%n
				</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- show parameters for hibernate sql 专为 Hibernate 定制 <logger name="org.hibernate.type.descriptor.sql.BasicBinder" 
		level="TRACE" /> <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" 
		level="DEBUG" /> <logger name="org.hibernate.SQL" level="DEBUG" /> <logger 
		name="org.hibernate.engine.QueryParameters" level="DEBUG" /> <logger name="org.hibernate.engine.query.HQLQueryPlan" 
		level="DEBUG" /> -->
	<!-- mybatis sql -->
	<logger name="com.ibatis" level="debug" />
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="debug" />
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="debug" />
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate"
		level="debug" />
	<logger name="java.sql.Connection" level="debug" />
	<logger name="java.sql.Statement" level="debug" />
	<logger name="java.sql.PreparedStatement" level="debug" />
	<logger name="java.sql.ResultSet" level="debug" />
	
	<!-- 东君系统通用打印日志到控制台和文件 -->
	<logger name="com.gdut.dongjun" level="info" additivity="false">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</logger>

	<!-- 模块 -->
	<logger
		name="com.gdut.dongjun.core.handler.msg_decoder.TemperatureDataReceiver"
		level="info">
		<appender-ref ref="TEMPERATURE_MODULE" />
	</logger>
	<logger
		name="com.gdut.dongjun.core.handler.msg_decoder.ElectronicDataReceiver"
		level="info">
		<appender-ref ref="ELECTRONIC_MODULE" />
	</logger>
	
	<!-- ERROR日志输出 -->
<!-- 	<logger -->
<!-- 		name="com.gdut.dongjun" level="error" additivity="false"> -->
<!-- 		<appender-ref ref="ERROR_FILE" /> -->
<!-- 	</logger> -->

	<!-- root -->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
	</root>
	<!-- <root level="ERROR"> -->
	<!-- <appender-ref ref="FILE_ERROR" /> -->
	<!-- </root> -->

	<!--日志异步到数据库 -->
	<!-- <appender name="DB" class="ch.qos.logback.classic.db.DBAppender"> -->
	<!--日志异步到数据库 -->
	<!-- <connectionSource -->
	<!-- class="ch.qos.logback.core.db.DriverManagerConnectionSource"> -->
	<!--连接池 -->
	<!-- <dataSource class="com.mchange.v2.c3p0.ComboPooledDataSource"> -->
	<!-- <driverClass>com.mysql.jdbc.Driver</driverClass> -->
	<!-- <url>jdbc:mysql://localhost:3306/elecon</url> -->
	<!-- <user>root</user> -->
	<!-- <password>root</password> -->
	<!-- </dataSource> -->
	<!-- </connectionSource> -->
	<!-- </appender> -->
</configuration>





